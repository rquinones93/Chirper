"use strict";

module.exports = {
  typeDefs: // Code generated by Prisma (prisma@1.34.10). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

  /* GraphQL */
  "type AggregateChirp {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  count: Long!\n}\n\ntype Chirp {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  content: String!\n  owner: User!\n}\n\ntype ChirpConnection {\n  pageInfo: PageInfo!\n  edges: [ChirpEdge]!\n  aggregate: AggregateChirp!\n}\n\ninput ChirpCreateInput {\n  id: ID\n  content: String!\n  owner: UserCreateOneWithoutChirpsInput!\n}\n\ninput ChirpCreateManyWithoutOwnerInput {\n  create: [ChirpCreateWithoutOwnerInput!]\n  connect: [ChirpWhereUniqueInput!]\n}\n\ninput ChirpCreateWithoutOwnerInput {\n  id: ID\n  content: String!\n}\n\ntype ChirpEdge {\n  node: Chirp!\n  cursor: String!\n}\n\nenum ChirpOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  content_ASC\n  content_DESC\n}\n\ntype ChirpPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  content: String!\n}\n\ninput ChirpScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  content: String\n  content_not: String\n  content_in: [String!]\n  content_not_in: [String!]\n  content_lt: String\n  content_lte: String\n  content_gt: String\n  content_gte: String\n  content_contains: String\n  content_not_contains: String\n  content_starts_with: String\n  content_not_starts_with: String\n  content_ends_with: String\n  content_not_ends_with: String\n  AND: [ChirpScalarWhereInput!]\n  OR: [ChirpScalarWhereInput!]\n  NOT: [ChirpScalarWhereInput!]\n}\n\ntype ChirpSubscriptionPayload {\n  mutation: MutationType!\n  node: Chirp\n  updatedFields: [String!]\n  previousValues: ChirpPreviousValues\n}\n\ninput ChirpSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: ChirpWhereInput\n  AND: [ChirpSubscriptionWhereInput!]\n  OR: [ChirpSubscriptionWhereInput!]\n  NOT: [ChirpSubscriptionWhereInput!]\n}\n\ninput ChirpUpdateInput {\n  content: String\n  owner: UserUpdateOneRequiredWithoutChirpsInput\n}\n\ninput ChirpUpdateManyDataInput {\n  content: String\n}\n\ninput ChirpUpdateManyMutationInput {\n  content: String\n}\n\ninput ChirpUpdateManyWithoutOwnerInput {\n  create: [ChirpCreateWithoutOwnerInput!]\n  delete: [ChirpWhereUniqueInput!]\n  connect: [ChirpWhereUniqueInput!]\n  set: [ChirpWhereUniqueInput!]\n  disconnect: [ChirpWhereUniqueInput!]\n  update: [ChirpUpdateWithWhereUniqueWithoutOwnerInput!]\n  upsert: [ChirpUpsertWithWhereUniqueWithoutOwnerInput!]\n  deleteMany: [ChirpScalarWhereInput!]\n  updateMany: [ChirpUpdateManyWithWhereNestedInput!]\n}\n\ninput ChirpUpdateManyWithWhereNestedInput {\n  where: ChirpScalarWhereInput!\n  data: ChirpUpdateManyDataInput!\n}\n\ninput ChirpUpdateWithoutOwnerDataInput {\n  content: String\n}\n\ninput ChirpUpdateWithWhereUniqueWithoutOwnerInput {\n  where: ChirpWhereUniqueInput!\n  data: ChirpUpdateWithoutOwnerDataInput!\n}\n\ninput ChirpUpsertWithWhereUniqueWithoutOwnerInput {\n  where: ChirpWhereUniqueInput!\n  update: ChirpUpdateWithoutOwnerDataInput!\n  create: ChirpCreateWithoutOwnerInput!\n}\n\ninput ChirpWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  content: String\n  content_not: String\n  content_in: [String!]\n  content_not_in: [String!]\n  content_lt: String\n  content_lte: String\n  content_gt: String\n  content_gte: String\n  content_contains: String\n  content_not_contains: String\n  content_starts_with: String\n  content_not_starts_with: String\n  content_ends_with: String\n  content_not_ends_with: String\n  owner: UserWhereInput\n  AND: [ChirpWhereInput!]\n  OR: [ChirpWhereInput!]\n  NOT: [ChirpWhereInput!]\n}\n\ninput ChirpWhereUniqueInput {\n  id: ID\n}\n\nscalar DateTime\n\nscalar Long\n\ntype Mutation {\n  createChirp(data: ChirpCreateInput!): Chirp!\n  updateChirp(data: ChirpUpdateInput!, where: ChirpWhereUniqueInput!): Chirp\n  updateManyChirps(data: ChirpUpdateManyMutationInput!, where: ChirpWhereInput): BatchPayload!\n  upsertChirp(where: ChirpWhereUniqueInput!, create: ChirpCreateInput!, update: ChirpUpdateInput!): Chirp!\n  deleteChirp(where: ChirpWhereUniqueInput!): Chirp\n  deleteManyChirps(where: ChirpWhereInput): BatchPayload!\n  createUser(data: UserCreateInput!): User!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  deleteUser(where: UserWhereUniqueInput!): User\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\nenum PrivacyStatus {\n  PRIVATE\n  PUBLIC\n}\n\ntype Query {\n  chirp(where: ChirpWhereUniqueInput!): Chirp\n  chirps(where: ChirpWhereInput, orderBy: ChirpOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Chirp]!\n  chirpsConnection(where: ChirpWhereInput, orderBy: ChirpOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChirpConnection!\n  user(where: UserWhereUniqueInput!): User\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  node(id: ID!): Node\n}\n\ntype Subscription {\n  chirp(where: ChirpSubscriptionWhereInput): ChirpSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\ntype User {\n  id: ID!\n  bio: String\n  chirps(where: ChirpWhereInput, orderBy: ChirpOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Chirp!]\n  createdAt: DateTime!\n  password: String\n  pinnedChirp: Int\n  privacyStatus: PrivacyStatus\n  profilePicture: String\n  updatedAt: DateTime!\n  username: String!\n}\n\ntype UserConnection {\n  pageInfo: PageInfo!\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  id: ID\n  bio: String\n  chirps: ChirpCreateManyWithoutOwnerInput\n  password: String\n  pinnedChirp: Int\n  privacyStatus: PrivacyStatus\n  profilePicture: String\n  username: String!\n}\n\ninput UserCreateOneWithoutChirpsInput {\n  create: UserCreateWithoutChirpsInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutChirpsInput {\n  id: ID\n  bio: String\n  password: String\n  pinnedChirp: Int\n  privacyStatus: PrivacyStatus\n  profilePicture: String\n  username: String!\n}\n\ntype UserEdge {\n  node: User!\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  bio_ASC\n  bio_DESC\n  createdAt_ASC\n  createdAt_DESC\n  password_ASC\n  password_DESC\n  pinnedChirp_ASC\n  pinnedChirp_DESC\n  privacyStatus_ASC\n  privacyStatus_DESC\n  profilePicture_ASC\n  profilePicture_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  username_ASC\n  username_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  bio: String\n  createdAt: DateTime!\n  password: String\n  pinnedChirp: Int\n  privacyStatus: PrivacyStatus\n  profilePicture: String\n  updatedAt: DateTime!\n  username: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n  AND: [UserSubscriptionWhereInput!]\n  OR: [UserSubscriptionWhereInput!]\n  NOT: [UserSubscriptionWhereInput!]\n}\n\ninput UserUpdateInput {\n  bio: String\n  chirps: ChirpUpdateManyWithoutOwnerInput\n  password: String\n  pinnedChirp: Int\n  privacyStatus: PrivacyStatus\n  profilePicture: String\n  username: String\n}\n\ninput UserUpdateManyMutationInput {\n  bio: String\n  password: String\n  pinnedChirp: Int\n  privacyStatus: PrivacyStatus\n  profilePicture: String\n  username: String\n}\n\ninput UserUpdateOneRequiredWithoutChirpsInput {\n  create: UserCreateWithoutChirpsInput\n  update: UserUpdateWithoutChirpsDataInput\n  upsert: UserUpsertWithoutChirpsInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserUpdateWithoutChirpsDataInput {\n  bio: String\n  password: String\n  pinnedChirp: Int\n  privacyStatus: PrivacyStatus\n  profilePicture: String\n  username: String\n}\n\ninput UserUpsertWithoutChirpsInput {\n  update: UserUpdateWithoutChirpsDataInput!\n  create: UserCreateWithoutChirpsInput!\n}\n\ninput UserWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  bio: String\n  bio_not: String\n  bio_in: [String!]\n  bio_not_in: [String!]\n  bio_lt: String\n  bio_lte: String\n  bio_gt: String\n  bio_gte: String\n  bio_contains: String\n  bio_not_contains: String\n  bio_starts_with: String\n  bio_not_starts_with: String\n  bio_ends_with: String\n  bio_not_ends_with: String\n  chirps_every: ChirpWhereInput\n  chirps_some: ChirpWhereInput\n  chirps_none: ChirpWhereInput\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  password: String\n  password_not: String\n  password_in: [String!]\n  password_not_in: [String!]\n  password_lt: String\n  password_lte: String\n  password_gt: String\n  password_gte: String\n  password_contains: String\n  password_not_contains: String\n  password_starts_with: String\n  password_not_starts_with: String\n  password_ends_with: String\n  password_not_ends_with: String\n  pinnedChirp: Int\n  pinnedChirp_not: Int\n  pinnedChirp_in: [Int!]\n  pinnedChirp_not_in: [Int!]\n  pinnedChirp_lt: Int\n  pinnedChirp_lte: Int\n  pinnedChirp_gt: Int\n  pinnedChirp_gte: Int\n  privacyStatus: PrivacyStatus\n  privacyStatus_not: PrivacyStatus\n  privacyStatus_in: [PrivacyStatus!]\n  privacyStatus_not_in: [PrivacyStatus!]\n  profilePicture: String\n  profilePicture_not: String\n  profilePicture_in: [String!]\n  profilePicture_not_in: [String!]\n  profilePicture_lt: String\n  profilePicture_lte: String\n  profilePicture_gt: String\n  profilePicture_gte: String\n  profilePicture_contains: String\n  profilePicture_not_contains: String\n  profilePicture_starts_with: String\n  profilePicture_not_starts_with: String\n  profilePicture_ends_with: String\n  profilePicture_not_ends_with: String\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  username: String\n  username_not: String\n  username_in: [String!]\n  username_not_in: [String!]\n  username_lt: String\n  username_lte: String\n  username_gt: String\n  username_gte: String\n  username_contains: String\n  username_not_contains: String\n  username_starts_with: String\n  username_not_starts_with: String\n  username_ends_with: String\n  username_not_ends_with: String\n  AND: [UserWhereInput!]\n  OR: [UserWhereInput!]\n  NOT: [UserWhereInput!]\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  username: String\n}\n"
};